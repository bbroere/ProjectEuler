import {isSPolygonal, polygonalNumber} from "../utilities/numbers";

/**
 * <p>Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:</p>
 * <table><tr><td>Triangle</td>
 * <td> </td>
 * <td>$T_n=n(n+1)/2$</td>
 * <td> </td>
 * <td>$1, 3, 6, 10, 15, \dots$</td>
 * </tr><tr><td>Pentagonal</td>
 * <td> </td>
 * <td>$P_n=n(3n - 1)/2$</td>
 * <td> </td>
 * <td>$1, 5, 12, 22, 35, \dots$</td>
 * </tr><tr><td>Hexagonal</td>
 * <td> </td>
 * <td>$H_n=n(2n - 1)$</td>
 * <td> </td>
 * <td>$1, 6, 15, 28, 45, \dots$</td>
 * </tr></table><p>It can be verified that $T_{285} = P_{165} = H_{143} = 40755$.</p>
 * <p>Find the next triangle number that is also pentagonal and hexagonal.</p>
 *
 * <p>Generated on 2024-08-09 from <a href='https://projecteuler.net/problem=45'>source</a></p>
 * <p><i><b>Average runtime ~1.2 ms</b></i></p>
 */
export function run(): number {
    let i: number = 285;
    let ti: number = 0;
    do {
        i++;
        ti = polygonalNumber(3)(i);
    } while (!(isSPolygonal(5, ti) && isSPolygonal(6, ti)));
    return ti;
}
